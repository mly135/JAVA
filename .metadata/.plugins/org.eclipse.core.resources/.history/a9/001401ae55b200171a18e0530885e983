package 装饰器;


public class Test {
	public static void main(String[] args) {
		concreteComponent concrete = new concreteComponent();
		DecoatorB b = new DecoatorB();
		Deco
	}

}


//抽象组件角色
abstract class Component{
	public abstract void Operation();
}

//被装饰者
class concreteComponent extends Component{

	@Override
	public void Operation() {
		System.out.println("被装饰类");
	}
	
}

//装饰器
abstract class Decoator extends Component{
	
	protected Component component;

	public Component getComponent() {
		return component;
	}

	public void setComponent(Component component) {
		this.component = component;
	}

	@Override
	public void Operation() {
		// TODO Auto-generated method stub
	}
	
//具体装饰类
class DecoatorA extends Decoator{

		@Override
		public void Operation() {
			super.Operation();
			System.out.println("装饰了A");
		}
		}
	
}

class DecoatorB extends Decoator{

	@Override
	public void Operation() {
		super.Operation();
		System.out.println("装饰了B");
	}
	}

class DecoatorC extends Decoator{

	@Override
	public void Operation() {
		super.Operation();
		System.out.println("装饰了B");
	}
	}

